DROP SEQUENCE NL_Doc_seq ; 
create sequence NL_Doc_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_Doc_PK_trig 
before insert on NL_Doc
for each row 
begin 
select NL_Doc_seq.nextval into :new.document_id from dual; 
end; 
/
alter table NL_Doc add created date ; 
alter table NL_Doc add created_by VARCHAR2 (255) ; 
alter table NL_Doc add row_version_number integer ; 
alter table NL_Doc add updated date ; 
alter table NL_Doc add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_Doc_AUD_trig 
before insert or update on NL_Doc 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE NL_Emp_seq ; 
create sequence NL_Emp_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_Emp_PK_trig 
before insert on NL_Emp
for each row 
begin 
select NL_Emp_seq.nextval into :new.EMP_ID from dual; 
end; 
/
alter table NL_Emp add created date ; 
alter table NL_Emp add created_by VARCHAR2 (255) ; 
alter table NL_Emp add row_version_number integer ; 
alter table NL_Emp add updated date ; 
alter table NL_Emp add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_Emp_AUD_trig 
before insert or update on NL_Emp 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE NL_List_seq ; 
create sequence NL_List_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_List_PK_trig 
before insert on NL_List
for each row 
begin 
select NL_List_seq.nextval into :new.LIST_ID from dual; 
end; 
/
alter table NL_List add created date ; 
alter table NL_List add created_by VARCHAR2 (255) ; 
alter table NL_List add row_version_number integer ; 
alter table NL_List add updated date ; 
alter table NL_List add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_List_AUD_trig 
before insert or update on NL_List 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE NL_Mem_seq ; 
create sequence NL_Mem_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger NL_Mem_PK_trig 
before insert on NL_Mem
for each row 
begin 
select NL_Mem_seq.nextval into :new.MEMBER_LIST_ID from dual; 
end; 
/
alter table NL_Mem add created date ; 
alter table NL_Mem add created_by VARCHAR2 (255) ; 
alter table NL_Mem add row_version_number integer ; 
alter table NL_Mem add updated date ; 
alter table NL_Mem add updated_by VARCHAR2 (255) ; 
/
create or replace trigger NL_Mem_AUD_trig 
before insert or update on NL_Mem 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP INDEX NL_Emp_EMP_ID_FK_0 ;
CREATE INDEX NL_Emp_EMP_ID_FK_0 ON NL_Doc(NL_Emp_EMP_ID) ;
DROP INDEX NL_Emp_EMP_ID_FK_1 ;
CREATE INDEX NL_Emp_EMP_ID_FK_1 ON NL_Mem(NL_Emp_EMP_ID) ;
DROP INDEX NL_List_LIST_ID_FK_2 ;
CREATE INDEX NL_List_LIST_ID_FK_2 ON NL_Mem(NL_List_LIST_ID) ;
DROP INDEX NL_List_LIST_ID1_FK_3 ;
CREATE INDEX NL_List_LIST_ID1_FK_3 ON NL_Mem(NL_List_LIST_ID1) ;
